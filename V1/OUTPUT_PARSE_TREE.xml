<PROGR>
<ALGO>
<INSTR>
<ASSIGN>
<BOOLVAR>
1
0
</BOOLVAR>
:=
<FALSE/>
</ASSIGN>
</INSTR>
<SEQ>
;
<ALGO>
<INSTR>
<ASSIGN>
<NUMVAR>
1
0
</NUMVAR>
:=
<DECNUM>
2
5
.
0
0
</DECNUM>
</ASSIGN>
</INSTR>
<SEQ>
;
</SEQ>
</ALGO>
</SEQ>
</ALGO>
<PROCDEFS>
,
<PROC>
1
{
<PROGR>
<ALGO>
<INSTR>
<ASSIGN>
<BOOLVAR>
1
</BOOLVAR>
:=
<TRUE/>
</ASSIGN>
</INSTR>
<SEQ>
;
<ALGO>
<INSTR>
<ASSIGN>
<NUMVAR>
1
</NUMVAR>
:=
<DECNUM>
5
.
0
0
</DECNUM>
</ASSIGN>
</INSTR>
<SEQ>
;
<ALGO>
<INSTR>
<BRANCH>
(
<BOOLVAR>
1
</BOOLVAR>
)
<THEN/>
{
<ALGO>
<INSTR>
<ASSIGN>
<NUMVAR>
1
</NUMVAR>
:=
<ADDITION>
(
<NUMVAR>
1
</NUMVAR>
,
<DECNUM>
3
.
0
0
</DECNUM>
)
</ADDITION>
</ASSIGN>
</INSTR>
<SEQ>
;
</SEQ>
</ALGO>
}
<ELSE>
{
<ALGO>
<INSTR>
<ASSIGN>
<NUMVAR>
1
</NUMVAR>
:=
<ADDITION>
(
<NUMVAR>
1
</NUMVAR>
,
<DECNUM>
1
.
0
0
</DECNUM>
)
</ADDITION>
</ASSIGN>
</INSTR>
<SEQ>
;
</SEQ>
</ALGO>
}
</ELSE>
</BRANCH>
</INSTR>
<SEQ>
;
<ALGO>
<INSTR>
<OUTPUT>
<VALUE>
<NUMVAR>
1
</NUMVAR>
</VALUE>
</OUTPUT>
</INSTR>
<SEQ>
;
<ALGO>
<INSTR>
<OUTPUT>
<TEXT_RESPONSE>
<STRINGV>
1
</STRINGV>
</TEXT_RESPONSE>
</OUTPUT>
</INSTR>
<SEQ>
;
<ALGO>
<INSTR>
<HALT/>
</INSTR>
</ALGO>
</SEQ>
</ALGO>
</SEQ>
</ALGO>
</SEQ>
</ALGO>
</SEQ>
</ALGO>
</SEQ>
</ALGO>
</PROGR>
}
</PROC>
<PROCDEFS>
,
<PROC>
2
{
<PROGR>
<ALGO>
<INSTR>
<LOOP>
(
<BOOLVAR>
1
0
</BOOLVAR>
)
{
<ALGO>
<INSTR>
<ASSIGN>
<NUMVAR>
1
0
</NUMVAR>
:=
<ADDITION>
(
<NUMVAR>
1
0
</NUMVAR>
,
<DECNUM>
1
.
0
0
</DECNUM>
)
</ADDITION>
</ASSIGN>
</INSTR>
<SEQ>
;
</SEQ>
</ALGO>
}
</LOOP>
</INSTR>
<SEQ>
;
<ALGO>
<INSTR>
<CALL>
<PROC>
1
</PROC>
</CALL>
</INSTR>
<SEQ>
;
<ALGO>
<INSTR>
<OUTPUT>
<VALUE>
<NUMVAR>
1
0
</NUMVAR>
</VALUE>
</OUTPUT>
</INSTR>
<SEQ>
;
<ALGO>
<INSTR>
<HALT/>
</INSTR>
</ALGO>
</SEQ>
</ALGO>
</SEQ>
</ALGO>
</SEQ>
</ALGO>
</PROGR>
}
</PROC>
</PROCDEFS>
</PROCDEFS>
</PROGR>
